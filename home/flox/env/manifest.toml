## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
ripgrep.pkg-path = "ripgrep"
fzf.pkg-path = "fzf"
fd.pkg-path = "fd"
lazygit.pkg-path = "lazygit"
lazydocker.pkg-path = "lazydocker"
btop.pkg-path = "btop"
fastfetch.pkg-path = "fastfetch"
zoxide.pkg-path = "zoxide"
eza.pkg-path = "eza"
direnv.pkg-path = "direnv"
git-lfs.pkg-path = "git-lfs"
github-cli.pkg-path = "github-cli"
neovim.pkg-path = "neovim"
zig.pkg-path = "zig"
go.pkg-path = "go"
erlang.pkg-path = "erlang"
elixir.pkg-path = "elixir"
dotnet-sdk_8.pkg-path = "dotnet-sdk_8"
ruby.pkg-path = "ruby"
python3.pkg-path = "python3"
postgresql.pkg-path = "postgresql"
pgloader.pkg-path = "pgloader"
deno.pkg-path = "deno"
nodejs_24.pkg-path = "nodejs_24"
rustup.pkg-path = "rustup"
hugo.pkg-path = "hugo"
helix.pkg-path = "helix"
marksman.pkg-path = "marksman"
tmux.pkg-path = "tmux"
luarocks.pkg-path = "luarocks"
lua5_1.pkg-path = "lua5_1"
# gum.pkg-path = "gum"
# gum.version = "^0.14.5"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
# on-activate = '''
#   # -> Set variables, create files and directories
#   # -> Perform initialization steps, e.g. create a python venv
#   # -> Useful environment variables:
#   #      - FLOX_ENV_PROJECT=/home/user/example
#   #      - FLOX_ENV=/home/user/example/.flox/run
#   #      - FLOX_ENV_CACHE=/home/user/example/.flox/cache
# '''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
# common = '''
#   gum style \
#   --foreground 212 --border-foreground 212 --border double \
#   --align center --width 50 --margin "1 2" --padding "2 4" \
#     $INTRO_MESSAGE
# '''
## Shell specific profiles go here:
# bash = ...
# zsh  = ...
# fish = ...

zsh = """
  eval "$(direnv hook zsh)"
"""
bash = """
  eval "$(direnv hook bash)"
"""
fish = """
  direnv hook fish | source
"""
tcsh = """
  eval `direnv hook tcsh`
"""


## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Include ----------------------------------------------------------
## ... environments to create a composed environment
## ------------------------------------------------------------------
[include]
# environments = [
#     { dir = "../common" }
# ]


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false

[options.activate]
mode = "run"


